-- Prop grammar --

prop1 :== prop2 '->' prop2 | prop2

prop2 :== prop3 '&&' prop3 | prop3 '||' prop3 | prop3

prop3 :== '!' prop4 | prop4 

prop4 :== atom | '(' prop1 ')'

atom  :== char | char nat

def   :== char def1

def1  :== char | char def1

-- Context grammar --

context :== prop1 | prop1 ',' context 

-- Proof grammar --

proof :== prop 'by' (rule0 | rule1 | rule2 | rule3)

rule0 :== 'hip' nat

rule1 :== ('&&e1' | '&&e2' | '!i' | '!!e' | '->i' nat | '||i1' | '||i2' | 't') subtree1

rule2 :== ('&&i' | '0i' | '->e') subtree2

rule3 :== '||e' nat nat subtree3

subtree1 :== '{' proof '}'
subree2  :== '{' proof '}' '{' proof '}'
subtree3 :== '{' proof '}' '{' proof '}' '{' proof '}'

--  --
'context' '{' context '}' 'proof' proof

-- examples

"!(!p || !q) -> p && q"

"(p -> q) $$ (q -> r)"
